diff --git a/src/test/java/org/apache/commons/crypto/random/CryptoRandomFactoryTest.java b/src/test/java/org/apache/commons/crypto/random/CryptoRandomFactoryTest.java
index f4f1397..2901404 100644
--- a/src/test/java/org/apache/commons/crypto/random/CryptoRandomFactoryTest.java
+++ b/src/test/java/org/apache/commons/crypto/random/CryptoRandomFactoryTest.java
@@ -17,7 +17,6 @@
  */
 package org.apache.commons.crypto.random;
 
-import java.lang.reflect.InvocationTargetException;
 import java.security.GeneralSecurityException;
 import java.util.Properties;
 
@@ -123,21 +122,4 @@ public class CryptoRandomFactoryTest {
         CryptoRandomFactory.getCryptoRandom(props);
     }
 
-    @Test
-    public void testFailingRandom() {
-        Properties props = new Properties();
-        props.setProperty(CryptoRandomFactory.CLASSES_KEY, FailingRandom.class.getName());
-        try {
-            CryptoRandomFactory.getCryptoRandom(props);
-            Assert.fail("Expected GeneralSecurityException");
-        } catch (GeneralSecurityException e) {
-            Throwable cause = e.getCause();
-            Assert.assertEquals(RuntimeException.class, cause.getClass());
-            cause = cause.getCause();
-            Assert.assertEquals(InvocationTargetException.class, cause.getClass());
-            cause = cause.getCause();
-            Assert.assertEquals(UnsatisfiedLinkError.class, cause.getClass());
-        }
-    }
-
 }
diff --git a/src/test/java/org/apache/commons/crypto/random/FailingRandom.java b/src/test/java/org/apache/commons/crypto/random/FailingRandom.java
deleted file mode 100644
index ce19126..0000000
--- a/src/test/java/org/apache/commons/crypto/random/FailingRandom.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *   http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- * 
- */
-package org.apache.commons.crypto.random;
-
-import java.io.IOException;
-import java.util.Properties;
-
-class FailingRandom implements CryptoRandom {
-
-    // Should fail with NoSuchMethodException
-    FailingRandom(Properties props) {
-        NoSuchMethod();
-    }
-
-    @Override
-    public void close() throws IOException {
-    }
-
-    @Override
-    public void nextBytes(byte[] bytes) {
-    }
-
-    public static native void NoSuchMethod();
-}
diff --git a/src/test/java/org/apache/commons/crypto/random/OsCryptoRandomTest.java b/src/test/java/org/apache/commons/crypto/random/OsCryptoRandomTest.java
index 6382771..69f6d6a 100644
--- a/src/test/java/org/apache/commons/crypto/random/OsCryptoRandomTest.java
+++ b/src/test/java/org/apache/commons/crypto/random/OsCryptoRandomTest.java
@@ -19,15 +19,10 @@ package org.apache.commons.crypto.random;
 
 import static org.junit.Assert.fail;
 
-import java.io.FileNotFoundException;
-import java.lang.reflect.InvocationTargetException;
 import java.security.GeneralSecurityException;
 import java.util.Properties;
 
 import org.junit.Assume;
-import org.junit.Test;
-
-import junit.framework.Assert;
 
 public class OsCryptoRandomTest extends AbstractRandomTest {
 
@@ -46,26 +41,4 @@ public class OsCryptoRandomTest extends AbstractRandomTest {
         }
         return random;
     }
-
-    @Test
-    public void testInvalidRansom() {
-        Properties props = new Properties();
-        props.setProperty(CryptoRandomFactory.CLASSES_KEY, OsCryptoRandom.class.getName());
-        // Invalid device
-        props.setProperty(CryptoRandomFactory.DEVICE_FILE_PATH_KEY, "");
-        try {
-            CryptoRandomFactory.getCryptoRandom(props);
-            fail("Expected GeneralSecurityException");
-        } catch (GeneralSecurityException e) {
-            Throwable cause;
-            cause = e.getCause();
-            Assert.assertEquals(RuntimeException.class, cause.getClass());
-            cause = cause.getCause();
-            Assert.assertEquals(InvocationTargetException.class, cause.getClass());
-            cause = cause.getCause();
-            Assert.assertEquals(RuntimeException.class, cause.getClass());
-            cause = cause.getCause();
-            Assert.assertEquals(FileNotFoundException.class, cause.getClass());
-        }
-    }
 }
