diff --git a/src/main/java/org/apache/commons/crypto/random/CryptoRandomFactory.java b/src/main/java/org/apache/commons/crypto/random/CryptoRandomFactory.java
index 272a4cc..4f3ca0c 100644
--- a/src/main/java/org/apache/commons/crypto/random/CryptoRandomFactory.java
+++ b/src/main/java/org/apache/commons/crypto/random/CryptoRandomFactory.java
@@ -101,12 +101,11 @@ public class CryptoRandomFactory {
     }
 
     /**
-     * The default value (OPENSSL,JAVA) used when creating a {@link CryptoCipher}.
+     * The default value (OpenSslCryptoRandom,JavaCryptoRandom) for crypto cipher.
      */
-    private static final String SECURE_RANDOM_CLASSES_DEFAULT = 
-        RandomProvider.OPENSSL.getClassName()
-        .concat(",")
-        .concat(RandomProvider.JAVA.getClassName());
+    private static final String SECURE_RANDOM_CLASSES_DEFAULT = RandomProvider
+        .OPENSSL.getClassName().concat(",").concat(RandomProvider.JAVA
+            .getClassName());
 
     /**
      * The private constructor of {@link CryptoRandomFactory}.
@@ -114,18 +113,6 @@ public class CryptoRandomFactory {
     private CryptoRandomFactory() {
     }
 
-    /**
-     * Gets a CryptoRandom instance using the default implementation
-     * as defined by {@link #SECURE_RANDOM_CLASSES_DEFAULT}
-     *
-     * @return CryptoRandom  the cryptoRandom object.
-     * @throws GeneralSecurityException if cannot create the {@link CryptoRandom} class
-     */
-    public static CryptoRandom getCryptoRandom() throws GeneralSecurityException {
-        Properties properties = new Properties();
-        return getCryptoRandom(properties);
-    }
-
     /**
      * Gets a CryptoRandom instance for specified props.
      * Uses the SECURE_RANDOM_CLASSES_KEY from the provided
